-- вывести все данные из таблиц
use Polyclinic
select * from Doctor
select * from Passport
select * from Patient
select * from Speciality
select * from Visit
select * from Diagnosis

-- вывести определенные данные, отсортированные в алфавитном порядке по 
-- определенному полю
select * from Doctor
order by DName

-- вывести  определенные  данные,  отсортированные  в  обратном  алфавитном 
-- порядке по двум полям
select * from Doctor
order by DSurname DESC, DName DESC

-- создать вычисляемое поле, и вывести данные, убрав дубликаты
select DISTINCT DSurname + ' ' + DName + ' ' + DMName as FIO from Doctor

-- вывести 30% строк
SELECT TOP 30 PERCENT *
FROM Patient

--вывести первые 5 строк
select TOP 5 * from Patient

--вывести строки начиная с 4 строки по 7 строку, отсортированные в обратном 
--порядке
SELECT *
    FROM Patient
    ORDER BY Surname DESC
    OFFSET 3 ROWS
    FETCH NEXT 4 ROWS ONLY

--Отсортировать данные, используя в   качестве критерия сортировки сложно 
--выражение на основе столбцов
select * from Doctor
order by DSurname + ' ' + DName + ' ' + DMName

-- Запрос на выборку с добавлением SELECT INTO
SELECT DSurname + ' ' + DName + ' ' + DMName AS FIO, DBirth_Date
INTO Doctors_birthdays
FROM Doctor
SELECT * FROM Doctors_birthdays

-- 4. С помощью языка T-SQL написать и выполнить 7 запросов на фильтрацию данных 
-- с использованием в запросах операторов сравнения, логических операторов
use Polyclinic
select Birth_Date from Patient
where Name = 'Владимир' and Surname = 'Белопольский' and MName = 'Сергеевич'

use Polyclinic
select * from Patient
where YEAR(Birth_Date) in ('2002','2003')

select * from Visit
where VDate < '2021-05-26'

select DName from Doctor
where DName like 'В%';

select * from Patient
where Birth_Date between '2001-01-01' and '2005-12-31'

SELECT Surname FROM Patient
WHERE Surname LIKE '[^м-с, ^б]%';

use Polyclinic
select * from Patient
where DATEDIFF(year, Birth_Date, getdate()) > 21

-- 5. Переименуйте одну из таблиц вашей БД
use Polyclinic
exec sp_rename 'Doctor', 'List_Doctors'

-- 6. Добавьте по две записи в каждую из таблиц вашей БД
insert into Visit values
('2022-10-20', 108374, 1, 4),
('2021-09-11', 120494, 3, 1)

insert into Patient values
(128372, 'Константин', 'Выслов', 'Гурьевич', '2005-02-28'),
(123904, 'Василиса', 'Чекало','Викторовна','2002-08-10')

-- 7. добавьте по смыслу один столбец
use Polyclinic
Alter Table dbo.Doctor
Add Phone NVARCHAR(13)


-- добавьте ограничение с именем на новый введенный вами столбец
Alter Table dbo.Doctor
ADD CONSTRAINT CK_Doctor
Check(Left(Phone, 4) ='+375' or Left(Phone, 2)= '80');


-- 8. Напишите  5  запросов,  используя  агрегатные  функции  (SUM,  MAX,  MIN,  AVG, 
-- COUNT)
use Polyclinic
select * from Doctor
where Exp = (select min(Exp) from Doctor)

use Polyclinic
select * from Doctor
where Exp = (select max(Exp) from Doctor)

select Exp, count(Id_Doc) as [Кол-во докторов] from Doctor
group by Exp
having exp > (select avg(exp) from Doctor)

-- 9. Написать 2 запроса на группировку данных, используя оператор GROUP BY
use Polyclinic
select Exp, count(Id_Doc) as [Кол-во докторов] from Doctor
group by Exp

select PId, avg(Exp) as [Средний стаж по каждой специальности] from Doctor
group by PId

-- 10.  Написать 2 запроса на фильтрацию групп, используя HAVING.
select Exp, count(Id_Doc) as [Кол-во докторов] from Doctor
group by Exp
having exp > (select avg(exp) from Doctor)


select PId, avg(Exp) as [Средний стаж по каждой специальности] from Doctor
group by PId
having avg(Exp) > (select avg(exp) from Doctor)

-- 11. Написать запросы на расширения SQL Server для группировки (ROLLUP, CUBE, GROUPING SETS, OVER)

select PId, COUNT(Id_Doc) as itog
from Doctor
group by rollup(PId)

select PId, Exp, count(Id_Doc) as itog
from Doctor
group by cube(PId, Exp)

select PId, Exp, count(Id_Doc) as itog
from Doctor
group by grouping sets(PId, Exp)

select DSurname, PId,
count(*) over (partition by PId) as [Количество докторов по специальности]
from Doctor

-- 12. Написать  запрос  на  разворачивание  данных (PIVOT),  отмена  разворачивания 
-- (UNPIVOT).
use Polyclinic
Select 'Количество' as [Количество пациентов по районам],
[Могилевское РОВД],
[Первомайское РУВД г. Минска]
from (
select Vudan, Id_Num from Passport)
as source_table
pivot
(
count(Id_Num) for Vudan in ([Могилевское РОВД],
[Первомайское РУВД г. Минска])
) as Pivot_table

use Polyclinic
select VPatient, [Id доктора или диагноза] from Visit
UNPIVOT (
[Id доктора или диагноза] for Значение in (VDoc, Diad)) unpvt

-- 13. Написать  по два запроса на каждое соединение  таблиц:  внутреннее,  внешнее 
-- левое, внешнее правое, полное внешнее  соединение.
use Polyclinic
select DName +' '+ DMName+' ' + DSurname as ФИО, SName from Speciality
inner join Doctor on Speciality.Id = Doctor.PId

select VId, DName +' '+ DMName+' ' + DSurname as [ФИО доктора], Name+' '+MName+' '+Surname as [ФИО пациента], VDate from Visit
inner join Doctor on Visit.VDoc = Doctor.PId
left join Patient on Visit.VPatient = Patient.N_Card

select VId, Name+' '+MName+' '+Surname as [ФИО пациента], DName from Diagnosis
right join Visit on Visit.Diad = Diagnosis.Id
left join Patient on Visit.VPatient = Patient.N_Card

select DName +' '+ DMName+' ' + DSurname as [ФИО доктора], Ser_Num, Vudan, Vudan_Date from Doctor
right join Passport on Passport.Id_Num = Doctor.PId_Num

select DName +' '+ DMName+' ' + DSurname as ФИО, SName from Speciality
full outer join Doctor on Speciality.Id = Doctor.PId

select VId, DName +' '+ DMName+' ' + DSurname as [ФИО доктора], Name+' '+MName+' '+Surname as [ФИО пациента], VDate from Visit
inner join Doctor on Visit.VDoc = Doctor.PId
full outer join Patient on Visit.VPatient = Patient.N_Card


-- 14. Написать по два запроса на пересечение, разность, объединение таблиц
use Polyclinic
select DName +' '+ DMName+' ' + DSurname as [ФИО доктора], Exp, PId
from Doctor
where Exp > 5 union
select DName +' '+ DMName+' ' + DSurname as [ФИО доктора], Exp, PId
from Doctor
where PId between 1 and 5

select DName +' '+ DMName+' ' + DSurname as [ФИО доктора], Exp, PId
from Doctor
where Exp > 5
except
select DName +' '+ DMName+' ' + DSurname as [ФИО доктора], Exp, PId
from Doctor
where PId between 1 and 5

select DName +' '+ DMName+' ' + DSurname as [ФИО доктора], Exp, PId
from Doctor
where Exp > 5
intersect
select DName +' '+ DMName+' ' + DSurname as [ФИО доктора], Exp, PId
from Doctor
where PId between 1 and 5

-- 15. Написать 4 запроса с использованием подзапросов, используя операторы сравнения, 
-- операторы IN, ANY|SOME и ALL,  предикат EXISTS

select DName +' '+ DMName+' ' + DSurname as [ФИО доктора], Exp, PId
from Doctor where
DSurname in (
    select DSurname from Doctor
    Group by
    DSurname having
    avg(Exp) > (
        select avg(Exp)
        from Doctor
    )
)

select DName +' '+ DMName+' ' + DSurname as [ФИО доктора], Exp, PId
from Doctor where
DName = 'Виктор'
and Exp > all (
    select Exp
    from Doctor
    where DName = 'Сергей'
)

select DName +' '+ DMName+' ' + DSurname as [ФИО доктора], Exp, PId
from Doctor where
DName = 'Виктор'
and Exp > any (
    select Exp
    from Doctor
    where DName = 'Сергей'
)

select DName +' '+ DMName+' ' + DSurname as [ФИО доктора], Exp, PId
from Doctor where
DName = 'Виктор'
and exists (
    select *
    from Doctor
    where DName = 'Сергей'
    and Exp >= 3
)

--16.  Написать 4 запроса по строковым функциям
select *, len(SName) from Speciality

select Id, left(SName, 3) from Speciality

select reverse(DName) from Diagnosis

select stuff(DName, 4, 16, '.') from Diagnosis

-- 17.  Написать 4 запроса по числовым функциям

select Square(Exp) from Doctor

select cos(Exp) from Doctor

select log10(Exp) from Doctor

select sigh(Exp) from Doctor

-- 18. Создайте 5 представлений по своей БД

create view VisitDoctorPatient (VisitDate, Doctor, Patient)
as select Visit.VDate, Doctor.DSurname, Patient.Surname
from Visit inner join Doctor on Visit.VDoc = Doctor.PId
inner join Patient on Visit.VPatient = Patient.N_Card

create view VisitDiag (VisitDate, Diag)
as select Visit.Date, Diagnosis.DName
from Visit inner join Diagnosis on Visit.Diad = Diagnosis.Id

create view PassportDoctor (DSurname, Ser_Num, Vudan, Vudan_Date)
as select Dactor.DSurname, Passport.Ser_Num, Passport.Vudan, Passport.Vudan_Date
from Doctor inner join Passport on Passport.Id_Num = Doctor.PId_Num

create view DoctorSpez (DSurname, SName)
as select Doctor.DSurname, Speciality.SName from Speciality inner join Doctor
on Speciality.Id = Doctor.PId

create view PatientDate (Surname, VisitDate)
as select Patient.Surname, Visit.VDate from Patient
inner join Visit on Visit.VPatient = Patient.N_Card

-- 19.  Покажите применение табличных переменных, временные локальных и глобальных 
-- таблиц, а так же обобщенных табличных выражений. 

DECLARE @myTableVariable TABLE (
	[ID] INT,
	[Name] VARCHAR(50),
	[Age] INT
)
INSERT INTO @myTableVariable
VALUES (1, 'John', 25),
   	(2, 'Kate', 30),
   	(3, 'Mike', 35)

SELECT [ID], [Name], [Age]
FROM @myTableVariable

CREATE TABLE #tempTable (
	[Name] VARCHAR(50),
	[Expe] INT
)

INSERT INTO #tempTable
SELECT DName, Exp
FROM Doctor
SELECT * FROM #tempTable

CREATE TABLE ##tempTable
(VDate date, Diag int)
 
INSERT INTO ##tempTable
SELECT VDate, Diad
FROM Visit
 
SELECT * FROM ##tempTable
order by VDate

DROP TABLE #tempTable
DROP TABLE ##tempTable

WITH temp AS
(
    SELECT N_Card,
    Name+' '+MName+' '+Surname as [ФИО]
    FROM Patient
)
 
SELECT * FROM temp

